{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","utils/constants.ts","components/PersonElement/PersonLink.tsx","components/PersonElement/PersonElemet.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/SortLink.tsx","components/PeopleTable.tsx","services/api.ts","types/SearchOptions.ts","components/PeopleFilters.tsx","utils/getFilteredPeople.ts","pages/PeoplePage.tsx","utils/getPreparedPeople.ts","pages/NotFoundPage.tsx","components/Navbar.tsx","App.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","Loader","TABLE_ATTRIBUTES","FILTER_CENTURY","PersonLink","person","to","slug","replace","classNames","sex","name","PersonElement","selectedPerson","born","died","mother","motherName","father","fatherName","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","SortLink","sortBy","isReversed","get","sortField","order","sort","PeopleTable","people","useParams","personSlug","map","attribute","toLocaleLowerCase","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","SearchOptions","PeopleFilters","useState","query","setQuery","setSearchParams","Sex","centuries","getAll","Centuries","type","placeholder","onChange","event","target","century","isCenturyIncluded","includes","filter","cent","onClick","getFilteredPeople","filteredPeople","length","Math","ceil","getCentury","lowerQuery","join","person1","person2","localeCompare","reverse","PeoplePage","setPeople","isLoading","setIsLoading","isError","setIsError","Query","Sort","Order","visiblePeople","useEffect","getPeople","peopleFromServer","find","getPreparedPeople","catch","finally","isDisplayErrorMessage","isNoPeopleFromServer","isPeopleFromServer","isNoMatchingPeople","NotFoundPage","Navigation","getLinkClass","isActive","role","App","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6983e394.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const FEMALE = 'f';\nexport const MALE = 'm';\nexport const EMPTY_VALUE = '-';\nexport const CENTURY = 100;\n\nexport const TABLE_ATTRIBUTES = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n\nexport const FILTER_CENTURY = [\n  '16',\n  '17',\n  '18',\n  '19',\n  '20',\n];\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { FEMALE, MALE } from '../../utils/constants';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`${person.slug}`}\n    replace\n    className={classNames({\n      'has-text-danger': person.sex === FEMALE,\n      'has-text-link': person.sex === MALE,\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { EMPTY_VALUE } from '../../utils/constants';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n  selectedPerson: string;\n};\n\nexport const PersonElement: React.FC<Props> = ({ person, selectedPerson }) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      className={\n        classNames({ 'has-background-warning': selectedPerson === person.slug })\n      }\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? (\n            <PersonLink person={person.mother} />\n          )\n          : (\n            person.motherName || EMPTY_VALUE\n          )}\n      </td>\n      <td>\n        {person.father\n          ? (\n            <PersonLink person={person.father} />\n          )\n          : (\n            person.fatherName || EMPTY_VALUE\n          )}\n      </td>\n    </tr>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  sortBy: string;\n};\n\nexport const SortLink: React.FC<Props> = ({ sortBy }) => {\n  const [searchParams] = useSearchParams();\n  const isReversed = searchParams.get('order') === 'desc';\n  const sortField = searchParams.get('sort') || '';\n\n  const params = {\n    order: (sortBy === sortField && !isReversed) ? 'desc' : null,\n    sort: (sortBy === sortField && isReversed) ? null : sortBy,\n  };\n\n  return (\n    <SearchLink params={params}>\n      <span className=\"icon\">\n        <i\n          className={classNames(\n            'fas',\n            {\n              'fa-sort': sortField !== sortBy,\n              'fa-sort-up': sortField === sortBy && !isReversed,\n              'fa-sort-down': sortField === sortBy && isReversed,\n            },\n          )}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { TABLE_ATTRIBUTES } from '../utils/constants';\nimport { Person } from '../types';\nimport { PersonElement } from './PersonElement/PersonElemet';\nimport { SortLink } from './SortLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {TABLE_ATTRIBUTES.map((attribute: string) => (\n            (attribute !== 'Mother' && attribute !== 'Father')\n              ? (\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    {attribute}\n                    <SortLink sortBy={attribute.toLocaleLowerCase()} />\n                  </span>\n                </th>\n              )\n              : (\n                <th>\n                  {attribute}\n                </th>\n              )\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonElement\n            person={person}\n            key={person.slug}\n            selectedPerson={personSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from '../types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum SearchOptions {\n  Sex = 'sex',\n  Query = 'query',\n  Centuries = 'centuries',\n  Sort = 'sort',\n  Order = 'order',\n}\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FEMALE, FILTER_CENTURY, MALE } from '../utils/constants';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\nimport { SearchOptions } from '../types/SearchOptions';\n\nexport const PeopleFilters = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sex = searchParams.get(SearchOptions.Sex);\n  const centuries = searchParams.getAll(SearchOptions.Centuries);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchParams(\n      getSearchWith(searchParams, {\n        query: event.target.value || null,\n      }),\n    );\n    setQuery(event.target.value);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={classNames(\n            { 'is-active': !sex },\n          )}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          className={classNames(\n            { 'is-active': sex === MALE },\n          )}\n          params={{ sex: MALE }}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          className={classNames(\n            { 'is-active': sex === FEMALE },\n          )}\n          params={{ sex: FEMALE }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {FILTER_CENTURY.map((century: string) => {\n              const isCenturyIncluded = centuries.includes(century);\n\n              return (\n                <SearchLink\n                  key={century}\n                  data-cy=\"century\"\n                  className={classNames(\n                    'button',\n                    'mr-1',\n                    { 'is-info': isCenturyIncluded },\n                  )}\n                  params={{\n                    centuries: isCenturyIncluded\n                      ? centuries.filter(cent => cent !== century)\n                      : [...centuries, century],\n                  }}\n                >\n                  {century}\n                </SearchLink>\n              );\n            })}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ sex: null, query: null, centuries: null }}\n          onClick={() => {\n            setQuery('');\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from '../types';\n\nexport const getFilteredPeople = (\n  people: Person[],\n  sex: string | null,\n  query: string | null,\n  centuries: string[],\n  sortField: string | null,\n  order: string | null,\n): Person[] => {\n  let filteredPeople = [...people];\n\n  if (sex) {\n    filteredPeople = filteredPeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length) {\n    const getCentury = (person: Person) => Math.ceil(person.born / 100);\n\n    filteredPeople = filteredPeople.filter(\n      person => centuries.includes(\n        getCentury(person).toString(),\n      ),\n    );\n  }\n\n  if (query) {\n    const lowerQuery = query.toLocaleLowerCase();\n\n    filteredPeople = filteredPeople.filter(person => {\n      return [\n        person.name,\n        person.motherName || '',\n        person.fatherName || '',\n      ]\n        .join(' ')\n        .toLocaleLowerCase()\n        .includes(lowerQuery);\n    });\n  }\n\n  if (sortField) {\n    filteredPeople.sort((person1, person2) => {\n      switch (sortField) {\n        case 'name':\n        case 'sex':\n          return person1[sortField].localeCompare(person2[sortField]);\n\n        case 'born':\n        case 'died':\n          return person1[sortField] - person2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n\n    if (order === 'desc') {\n      filteredPeople.reverse();\n    }\n  }\n\n  return filteredPeople;\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPreparedPeople } from '../utils/getPreparedPeople';\nimport { getPeople } from '../services/api';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { SearchOptions } from '../types/SearchOptions';\nimport { getFilteredPeople } from '../utils/getFilteredPeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  const sex = searchParams.get(SearchOptions.Sex);\n  const query = searchParams.get(SearchOptions.Query);\n  const centuries = searchParams.getAll(SearchOptions.Centuries);\n  const sortField = searchParams.get(SearchOptions.Sort);\n  const order = searchParams.get(SearchOptions.Order);\n\n  const visiblePeople = getFilteredPeople(\n    people,\n    sex,\n    query,\n    centuries,\n    sortField,\n    order,\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromServer => {\n        setPeople(getPreparedPeople(peopleFromServer));\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const isDisplayErrorMessage = isError && !isLoading;\n  const isNoPeopleFromServer = !people.length && !isLoading && !isError;\n  const isPeopleFromServer = !!people.length && !isError;\n  const isNoMatchingPeople = !visiblePeople.length && !isLoading && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isDisplayErrorMessage && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {isNoPeopleFromServer && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {isNoMatchingPeople && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people matching the current search criteria\n                </p>\n              )}\n\n              {isPeopleFromServer && !isNoMatchingPeople && (\n                <PeopleTable people={visiblePeople} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getPreparedPeople(people: Person[]) {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(({ name }) => name === person.motherName),\n      father: people.find(({ name }) => name === person.fatherName),\n    };\n  });\n}\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nimport { App } from './App';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":personSlug\" />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}